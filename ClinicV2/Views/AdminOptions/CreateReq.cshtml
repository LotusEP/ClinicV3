@model ClinicV2.Models.CreateCriteriaModel

@{
    ViewBag.Title = "CreateReq";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>

    function CriteriaChangeDrop() {
        var listCriteria = document.getElementById('Criteria').value;
        document.getElementById("Criteria_Name").value = listCriteria;
      
    }
    function CriteriaChangeInput() {
        document.getElementById('Criteria').value = "Custom";
     

    }
    function loadCriteria()
    {
        var listCriteria = document.getElementById('Criteria');
        var list =  @Html.Raw(Json.Encode(Model.CriteriaOption));     
        for (var x = 0; x < list.length; x++) {
            console.log(list[x]);
            var op = document.createElement('option');
            op.text = list[x];
            listCriteria.add(op);
        }

    }

</script>
<h2>Criteria Form</h2>

<body onload="loadCriteria()">
    @ViewBag.ExistMess
    @using (Html.BeginForm("CreateReq", "AdminOptions", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Criteria</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                <div class="col-md-12">    
                    <div>
                        <h3>Existing Criteria</h3>
                        <select id="Criteria" onchange="CriteriaChangeDrop()">
                            <option>Custom</option>
                        </select>
                    </div>
                    <div>
                        <h3>
                            Criteria
                        </h3>
                        @Html.EditorFor(model => model.Criteria.Name, new { htmlAttributes = new { @class = "form-control", @onchange = "CriteriaChangeInput()" } })
                    </div>

                </div>
            </div>

            <div class="form-group">
              
                <div class="col-md-10">
                    <h3>Criteria Value</h3>
                    @Html.EditorFor(model => model.Criteria.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Criteria.Value, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

    <div>
        <table class="table" id="clinicReqTable">
            <tr>

                <th>
                    Criteria Name
                </th>
                <th>
                    Criteria Value
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.listofCriteriaValue)
            {
                
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.CriteriaID)
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditReq", new { id = item.CriteriaID })
                        @Html.ActionLink("Delete", "DeleteCriteriaComplete", new { id = item.CriteriaID })
                    </td>
                </tr>
            }

        </table>

    </div>

    <div>
        @Html.ActionLink("Back to List", "ViewReq", "AdminOptions");
    </div>


</body>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
